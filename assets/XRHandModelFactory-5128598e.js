import{g as f,h as x,S as g,aa as u,q as M,I as b,ab as y,O as w}from"./index-8f04ee04.js";import{G as v}from"./GLTFLoader-1364ebd2.js";const p=new f,m=new x;class c{constructor(i,t,n,a,e){this.controller=t,this.handModel=i,this.envMap=null;let s;!e||!e.primitive||e.primitive==="sphere"?s=new g(1,10,10):e.primitive==="box"&&(s=new u(1,1,1));const r=new M;this.handMesh=new b(s,r,30),this.handMesh.instanceMatrix.setUsage(y),this.handMesh.castShadow=!0,this.handMesh.receiveShadow=!0,this.handModel.add(this.handMesh),this.joints=["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]}updateMesh(){const t=this.controller.joints;let n=0;for(let a=0;a<this.joints.length;a++){const e=t[this.joints[a]];e.visible&&(m.setScalar(e.jointRadius||.008),p.compose(e.position,e.quaternion,m),this.handMesh.setMatrixAt(a,p),n++)}this.handMesh.count=n,this.handMesh.instanceMatrix.needsUpdate=!0}}const j="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/";class k{constructor(i,t,n,a,e=null){this.controller=t,this.handModel=i,this.bones=[],e===null&&(e=new v,e.setPath(n||j)),e.load(`${a}.glb`,s=>{const r=s.scene.children[0];this.handModel.add(r);const l=r.getObjectByProperty("type","SkinnedMesh");l.frustumCulled=!1,l.castShadow=!0,l.receiveShadow=!0,["wrist","thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip","index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip","middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip","ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip","pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"].forEach(d=>{const o=r.getObjectByName(d);o!==void 0?o.jointName=d:console.warn(`Couldn't find ${d} in ${a} hand mesh`),this.bones.push(o)})})}updateMesh(){const i=this.controller.joints;for(let t=0;t<this.bones.length;t++){const n=this.bones[t];if(n){const a=i[n.jointName];if(a.visible){const e=a.position;n.position.copy(e),n.quaternion.copy(a.quaternion)}}}}}class S extends w{constructor(i){super(),this.controller=i,this.motionController=null,this.envMap=null,this.mesh=null}updateMatrixWorld(i){super.updateMatrixWorld(i),this.motionController&&this.motionController.updateMesh()}}class L{constructor(){this.path=null}setPath(i){return this.path=i,this}createHandModel(i,t){const n=new S(i);return i.addEventListener("connected",a=>{const e=a.data;e.hand&&!n.motionController&&(n.xrInputSource=e,t===void 0||t==="spheres"?n.motionController=new c(n,i,this.path,e.handedness,{primitive:"sphere"}):t==="boxes"?n.motionController=new c(n,i,this.path,e.handedness,{primitive:"box"}):t==="mesh"&&(n.motionController=new k(n,i,this.path,e.handedness))),i.visible=!0}),i.addEventListener("disconnected",()=>{i.visible=!1}),n}}export{L as XRHandModelFactory};
